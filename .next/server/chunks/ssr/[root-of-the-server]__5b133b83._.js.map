{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/generate-meme.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview A meme generation AI agent that provides relevant memes to distract users.\n *\n * - generateRelevantMeme - A function that generates a relevant meme based on user context.\n * - GenerateRelevantMemeInput - The input type for the generateRelevantMeme function.\n * - GenerateRelevantMemeOutput - The return type for the generateRelevantMeme function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst GenerateRelevantMemeInputSchema = z.object({\n  userContext: z\n    .string()\n    .describe(\n      'Description of the user and their current context (e.g., working on a project, studying for an exam, etc.).'\n    ),\n});\nexport type GenerateRelevantMemeInput = z.infer<typeof GenerateRelevantMemeInputSchema>;\n\nconst GenerateRelevantMemeOutputSchema = z.object({\n  memeDataUri: z\n    .string()\n    .describe(\n      'The meme image as a data URI that must include a MIME type and use Base64 encoding. Expected format: \\'data:<mimetype>;base64,<encoded_data>\\'.' \n    ),\n  altText: z.string().describe('Alternative text describing the meme.'),\n});\nexport type GenerateRelevantMemeOutput = z.infer<typeof GenerateRelevantMemeOutputSchema>;\n\nexport async function generateRelevantMeme(\n  input: GenerateRelevantMemeInput\n): Promise<GenerateRelevantMemeOutput> {\n  return generateRelevantMemeFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'generateRelevantMemePrompt',\n  input: {schema: GenerateRelevantMemeInputSchema},\n  output: {schema: GenerateRelevantMemeOutputSchema},\n  prompt: `You are a meme generator AI that provides a relevant meme based on the user\\'s current context.\n\n  The meme should be humorous and attention-grabbing to effectively distract the user.\n\n  User context: {{{userContext}}}\n\n  Generate a meme that is contextually relevant to the user's current situation. Respond with the image as a data URI and an alt text description. The image must be a meme.\n\n  Meme: {{media url=memeDataUri}}`,\n});\n\nconst generateRelevantMemeFlow = ai.defineFlow(\n  {\n    name: 'generateRelevantMemeFlow',\n    inputSchema: GenerateRelevantMemeInputSchema,\n    outputSchema: GenerateRelevantMemeOutputSchema,\n  },\n  async input => {\n    const {media} = await ai.generate({\n      model: 'googleai/gemini-2.0-flash-preview-image-generation',\n      prompt: [\n        {text: `Generate a meme that is contextually relevant to this situation: ${input.userContext}`},\n      ],\n      config: {responseModalities: ['TEXT', 'IMAGE']},\n    });\n\n    return {\n      memeDataUri: media!.url,\n      altText: `A relevant meme for the context: ${input.userContext}`,\n    };\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,kCAAkC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC/C,aAAa,uIAAA,CAAA,IAAC,CACX,MAAM,GACN,QAAQ,CACP;AAEN;AAGA,MAAM,mCAAmC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAChD,aAAa,uIAAA,CAAA,IAAC,CACX,MAAM,GACN,QAAQ,CACP;IAEJ,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC/B;AAGO,eAAe,qBACpB,KAAgC;IAEhC,OAAO,yBAAyB;AAClC;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAA+B;IAC/C,QAAQ;QAAC,QAAQ;IAAgC;IACjD,QAAQ,CAAC;;;;;;;;iCAQsB,CAAC;AAClC;AAEA,MAAM,2BAA2B,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC5C;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,KAAK,EAAC,GAAG,MAAM,mHAAA,CAAA,KAAE,CAAC,QAAQ,CAAC;QAChC,OAAO;QACP,QAAQ;YACN;gBAAC,MAAM,CAAC,iEAAiE,EAAE,MAAM,WAAW,EAAE;YAAA;SAC/F;QACD,QAAQ;YAAC,oBAAoB;gBAAC;gBAAQ;aAAQ;QAAA;IAChD;IAEA,OAAO;QACL,aAAa,MAAO,GAAG;QACvB,SAAS,CAAC,iCAAiC,EAAE,MAAM,WAAW,EAAE;IAClE;AACF;;;IAxCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 310, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions.ts"],"sourcesContent":["\n'use server';\n\nimport { generateRelevantMeme, GenerateRelevantMemeInput, GenerateRelevantMemeOutput } from '@/ai/flows/generate-meme';\n\ninterface ActionResult {\n  error?: string;\n  data?: GenerateRelevantMemeOutput;\n}\n\nexport async function getMemeAction(input: GenerateRelevantMemeInput): Promise<ActionResult> {\n  try {\n    const result = await generateRelevantMeme(input);\n    if (!result || !result.memeDataUri) {\n        return { error: 'The AI returned an empty meme. It might be on a break.' };\n    }\n    return { data: result };\n  } catch (error) {\n    console.error('Meme generation failed:', error);\n    return { error: 'Failed to generate a meme. Our AI might be procrastinating too.' };\n  }\n}\n"],"names":[],"mappings":";;;;;AAGA;;;;;AAOO,eAAe,cAAc,KAAgC;IAClE,IAAI;QACF,MAAM,SAAS,MAAM,CAAA,GAAA,sIAAA,CAAA,uBAAoB,AAAD,EAAE;QAC1C,IAAI,CAAC,UAAU,CAAC,OAAO,WAAW,EAAE;YAChC,OAAO;gBAAE,OAAO;YAAyD;QAC7E;QACA,OAAO;YAAE,MAAM;QAAO;IACxB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO;YAAE,OAAO;QAAkE;IACpF;AACF;;;IAXsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 349, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {getMemeAction as '405cbd6026e933df30188ece03c417a9248f79d10f'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 401, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/MemeGenerator.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const MemeGenerator = registerClientReference(\n    function() { throw new Error(\"Attempted to call MemeGenerator() from the server but MemeGenerator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/MemeGenerator.tsx <module evaluation>\",\n    \"MemeGenerator\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,kEACA","debugId":null}},
    {"offset": {"line": 415, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/MemeGenerator.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const MemeGenerator = registerClientReference(\n    function() { throw new Error(\"Attempted to call MemeGenerator() from the server but MemeGenerator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/MemeGenerator.tsx\",\n    \"MemeGenerator\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,8CACA","debugId":null}},
    {"offset": {"line": 429, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 439, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/BroadcastMessage.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const BroadcastMessage = registerClientReference(\n    function() { throw new Error(\"Attempted to call BroadcastMessage() from the server but BroadcastMessage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/BroadcastMessage.tsx <module evaluation>\",\n    \"BroadcastMessage\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,qEACA","debugId":null}},
    {"offset": {"line": 453, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/BroadcastMessage.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const BroadcastMessage = registerClientReference(\n    function() { throw new Error(\"Attempted to call BroadcastMessage() from the server but BroadcastMessage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/BroadcastMessage.tsx\",\n    \"BroadcastMessage\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,mBAAmB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAClD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,iDACA","debugId":null}},
    {"offset": {"line": 467, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 477, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 493, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 574, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/FeatureCard.tsx"],"sourcesContent":["import { Card, CardHeader, CardTitle, CardDescription, CardContent } from \"@/components/ui/card\";\nimport type { LucideIcon } from 'lucide-react';\n\ninterface FeatureCardProps {\n  title: string;\n  description: string;\n  icon: LucideIcon;\n  children: React.ReactNode;\n  className?: string;\n}\n\nexport function FeatureCard({ title, description, icon: Icon, children, className }: FeatureCardProps) {\n  return (\n    <Card className={`transition-all duration-300 hover:shadow-primary/20 hover:shadow-lg ${className}`}>\n      <CardHeader>\n        <CardTitle className=\"flex items-center gap-2\">\n          <Icon className=\"w-6 h-6 text-accent\" />\n          {title}\n        </CardTitle>\n        <CardDescription>{description}</CardDescription>\n      </CardHeader>\n      <CardContent>\n        {children}\n      </CardContent>\n    </Card>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAWO,SAAS,YAAY,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAoB;IACnG,qBACE,8OAAC,gIAAA,CAAA,OAAI;QAAC,WAAW,CAAC,oEAAoE,EAAE,WAAW;;0BACjG,8OAAC,gIAAA,CAAA,aAAU;;kCACT,8OAAC,gIAAA,CAAA,YAAS;wBAAC,WAAU;;0CACnB,8OAAC;gCAAK,WAAU;;;;;;4BACf;;;;;;;kCAEH,8OAAC,gIAAA,CAAA,kBAAe;kCAAE;;;;;;;;;;;;0BAEpB,8OAAC,gIAAA,CAAA,cAAW;0BACT;;;;;;;;;;;;AAIT","debugId":null}},
    {"offset": {"line": 637, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/PageVisibility.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const PageVisibility = registerClientReference(\n    function() { throw new Error(\"Attempted to call PageVisibility() from the server but PageVisibility is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/PageVisibility.tsx <module evaluation>\",\n    \"PageVisibility\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,mEACA","debugId":null}},
    {"offset": {"line": 651, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/PageVisibility.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const PageVisibility = registerClientReference(\n    function() { throw new Error(\"Attempted to call PageVisibility() from the server but PageVisibility is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/PageVisibility.tsx\",\n    \"PageVisibility\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,iBAAiB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAChD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,+CACA","debugId":null}},
    {"offset": {"line": 665, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 675, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 735, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Label = registerClientReference(\n    function() { throw new Error(\"Attempted to call Label() from the server but Label is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/label.tsx <module evaluation>\",\n    \"Label\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,QAAQ,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,6DACA","debugId":null}},
    {"offset": {"line": 749, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Label = registerClientReference(\n    function() { throw new Error(\"Attempted to call Label() from the server but Label is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/label.tsx\",\n    \"Label\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,QAAQ,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACvC;IAAa,MAAM,IAAI,MAAM;AAA0N,GACvP,yCACA","debugId":null}},
    {"offset": {"line": 763, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 773, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/switch.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Switch = registerClientReference(\n    function() { throw new Error(\"Attempted to call Switch() from the server but Switch is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/switch.tsx <module evaluation>\",\n    \"Switch\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,8DACA","debugId":null}},
    {"offset": {"line": 787, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/switch.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Switch = registerClientReference(\n    function() { throw new Error(\"Attempted to call Switch() from the server but Switch is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/ui/switch.tsx\",\n    \"Switch\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,SAAS,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACxC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,0CACA","debugId":null}},
    {"offset": {"line": 801, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 811, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["import { MemeGenerator } from '@/components/MemeGenerator';\nimport { BroadcastMessage } from '@/components/BroadcastMessage';\nimport { FeatureCard } from '@/components/FeatureCard';\nimport { PageVisibility } from '@/components/PageVisibility';\nimport { Smartphone, CalendarClock, Hourglass, SlidersHorizontal } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { Label } from '@/components/ui/label';\nimport { Switch } from '@/components/ui/switch';\n\nexport default function Home() {\n  return (\n    <div className=\"flex flex-col min-h-screen bg-background text-foreground font-body\">\n      <header className=\"p-6 md:p-8 flex-shrink-0\">\n        <div className=\"max-w-7xl mx-auto\">\n          <h1 className=\"text-4xl md:text-5xl font-bold font-headline text-primary flex items-center gap-3\">\n            <Smartphone className=\"w-10 h-10 md:w-12 md:h-12\" />\n            Distractify\n          </h1>\n          <p className=\"text-lg text-muted-foreground mt-2 max-w-2xl\">\n            Why be productive when you can be distracted? We're here to help you procrastinate in style.\n          </p>\n        </div>\n      </header>\n      \n      <main className=\"flex-1 w-full max-w-7xl mx-auto p-6 md:p-8\">\n        <div className=\"grid gap-8 grid-cols-1 lg:grid-cols-3\">\n          \n          <div className=\"lg:col-span-2\">\n            <MemeGenerator />\n          </div>\n\n          <div className=\"space-y-8\">\n            <BroadcastMessage />\n\n            <FeatureCard\n              title=\"Screen Time Guardian\"\n              description=\"We'll notice when you're ignoring us.\"\n              icon={Hourglass}\n            >\n              <PageVisibility />\n            </FeatureCard>\n\n            <FeatureCard\n              title=\"Scheduled Distractions\"\n              description=\"Let's plan your procrastination.\"\n              icon={CalendarClock}\n            >\n              <div className=\"space-y-4\">\n                <p className=\"text-sm text-muted-foreground\">This feature is so good, we're still procrastinating on building it. But imagine the possibilities!</p>\n                <div className=\"flex items-center space-x-2\">\n                  <Switch id=\"distraction-mode\" disabled />\n                  <Label htmlFor=\"distraction-mode\">Enable Interruptions</Label>\n                </div>\n                <Button disabled className=\"w-full\">\n                  <SlidersHorizontal className=\"mr-2 h-4 w-4\" />\n                  Configure Schedule\n                </Button>\n              </div>\n            </FeatureCard>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAO,WAAU;0BAChB,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;;8CACZ,8OAAC,8MAAA,CAAA,aAAU;oCAAC,WAAU;;;;;;gCAA8B;;;;;;;sCAGtD,8OAAC;4BAAE,WAAU;sCAA+C;;;;;;;;;;;;;;;;;0BAMhE,8OAAC;gBAAK,WAAU;0BACd,cAAA,8OAAC;oBAAI,WAAU;;sCAEb,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC,mIAAA,CAAA,gBAAa;;;;;;;;;;sCAGhB,8OAAC;4BAAI,WAAU;;8CACb,8OAAC,sIAAA,CAAA,mBAAgB;;;;;8CAEjB,8OAAC,iIAAA,CAAA,cAAW;oCACV,OAAM;oCACN,aAAY;oCACZ,MAAM,4MAAA,CAAA,YAAS;8CAEf,cAAA,8OAAC,oIAAA,CAAA,iBAAc;;;;;;;;;;8CAGjB,8OAAC,iIAAA,CAAA,cAAW;oCACV,OAAM;oCACN,aAAY;oCACZ,MAAM,wNAAA,CAAA,gBAAa;8CAEnB,cAAA,8OAAC;wCAAI,WAAU;;0DACb,8OAAC;gDAAE,WAAU;0DAAgC;;;;;;0DAC7C,8OAAC;gDAAI,WAAU;;kEACb,8OAAC,kIAAA,CAAA,SAAM;wDAAC,IAAG;wDAAmB,QAAQ;;;;;;kEACtC,8OAAC,iIAAA,CAAA,QAAK;wDAAC,SAAQ;kEAAmB;;;;;;;;;;;;0DAEpC,8OAAC,kIAAA,CAAA,SAAM;gDAAC,QAAQ;gDAAC,WAAU;;kEACzB,8OAAC,gOAAA,CAAA,oBAAiB;wDAAC,WAAU;;;;;;oDAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUhE","debugId":null}}]
}